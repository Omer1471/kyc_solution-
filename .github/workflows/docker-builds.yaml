name: Build, Scan, and Push Docker Image

on:
  push:
    branches:
      - master

jobs:
  build_and_scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup Ansible
      run: |
        sudo apt-add-repository --yes --update ppa:ansible/ansible
        sudo apt install ansible

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build Backend Image
      uses: docker/build-push-action@v2
      id: build_backend
      with:
        context: .
        file: ./Dockerfile.backend
        tags: 147188/project1_backend:latest
        push: false

    - name: Notify via Email if Backend Build Failed
      if: failure() && steps.build_backend.outcome == 'failure'
      uses: dawidd6/action-send-mail@v3.8.0
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: Backend Image Build Failed
        to: liban.omer4@gmail.com
        from: liban.omer4@gmail.com
        body: The backend image build failed.

    - name: Notify via Email if Backend Build Succeeded
      if: success() && steps.build_backend.outcome == 'success'
      uses: dawidd6/action-send-mail@v3.8.0
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: Backend Image Build Succeeded
        to: liban.omer4@gmail.com
        from: liban.omer4@gmail.com
        body: The backend image build succeeded.

    - name: Push Backend Image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile.backend
        tags: 147188/project1_backend:latest
        push: true

    - name: Build Frontend Image
      uses: docker/build-push-action@v2
      id: build_frontend
      with:
        context: .
        file: ./Dockerfile.frontend
        tags: 147188/project1_frontend:latest
        push: false

    - name: Notify via Email if Frontend Build Failed
      if: failure() && steps.build_frontend.outcome == 'failure'
      uses: dawidd6/action-send-mail@v3.8.0
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: Frontend Image Build Failed
        to: liban.omer4@gmail.com
        from: liban.omer4@gmail.com
        body: The frontend image build failed.

    - name: Notify via Email if Frontend Build Succeeded
      if: success() && steps.build_frontend.outcome == 'success'
      uses: dawidd6/action-send-mail@v3.8.0
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: Frontend Image Build Succeeded
        to: liban.omer4@gmail.com
        from: liban.omer4@gmail.com
        body: The frontend image build succeeded.

    - name: Push Frontend Image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile.frontend
        tags: 147188/project1_frontend:latest
        push: true

    - name: Install Trivy
      run: |
        wget https://github.com/aquasecurity/trivy/releases/download/v0.44.1/trivy_0.44.1_Linux-64bit.deb
        sudo dpkg -i trivy_0.44.1_Linux-64bit.deb

    - name: Scan Backend Image with Trivy and Suggest Update
      run: |
        trivy image 147188/project1_backend:latest
        echo "::set-output name=vuln_backend::$(trivy image -f json 147188/project1_backend:latest)"

    - name: Scan Frontend Image with Trivy and Suggest Update
      run: |
        trivy image 147188/project1_frontend:latest || true
        echo "::set-output name=vuln_frontend::$(trivy image -f json 147188/project1_frontend:latest || true)"

    - name: Analyze Vulnerabilities and Suggest Update
      run: |
        if [ -n "${{ steps.build_and_scan.outputs.vuln_backend }}" ]; then
          echo "Backend image vulnerabilities detected!"
          echo "Vulnerabilities:"
          echo "${{ steps.build_and_scan.outputs.vuln_backend }}"
          echo "Consider updating your backend image."
        fi
        if [ -n "${{ steps.build_and_scan.outputs.vuln_frontend }}" ]; then
          echo "Frontend image vulnerabilities detected!"
          echo "Vulnerabilities:"
          echo "${{ steps.build_and_scan.outputs.vuln_frontend }}"
          echo "Consider updating your frontend image."
        fi

    - name: Notify via Email if Backend Scan Failed
      if: failure() && steps.build_backend.outcome == 'success' # Only notify if build was successful but scan failed
      uses: dawidd6/action-send-mail@v3.8.0
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: Critical Vulnerabilities Detected in Backend Image
        to: liban.omer4@gmail.com
        from: liban.omer4@gmail.com
        body: Critical vulnerabilities detected in the backend image!

    - name: Notify via Email if Frontend Scan Failed
      if: failure() && steps.build_frontend.outcome == 'success' # Only notify if build was successful but scan failed
      uses: dawidd6/action-send-mail@v3.8.0
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: Critical Vulnerabilities Detected in Frontend Image
        to: liban.omer4@gmail.com
        from: liban.omer4@gmail.com
        body: Critical vulnerabilities detected in the frontend image!

